#Main.tf

terraform {
  backend "azurerm" {
    resource_group_name = "azrg001"
    storage_account_name = "azrgstrg001"
    container_name = "test11"
    key = "terraform.*"
    access_key = "******"
    
  }
  required_providers {
   azurerm = {
       source = "hashicorp/azurerm"
        version = "3.49.0"
    }
  }
}
provider "azurerm" {
    features {
      
    }
    subscription_id = var.subscription_id
    client_id = var.client_id
    client_secret = var.client_secret
    tenant_id = var.tenant_id

}
resource "azurerm_resource_group" "azlabelrg401" {
    name = "azrgus3011"
    location = "East US"
    tags = {
      "name" = "azure resourcegroup-eastus"
    }
  
}
resource "azurerm_virtual_network" "azlabelvnet401" {
    name = "azvnetus3011"
    resource_group_name = azurerm_resource_group.azlabelrg401.name
    location = azurerm_resource_group.azlabelrg401.location
    address_space = [ "10.60.0.0/16" ]


  
}
#Webserver
resource "azurerm_subnet" "azlabelwebsubnet401" {
    name = "websubnet"
    resource_group_name = azurerm_resource_group.azlabelrg401.name
    virtual_network_name = azurerm_virtual_network.azlabelvnet401.name
    address_prefixes = [ "10.60.1.0/24" ]
  
}
resource "azurerm_public_ip" "azlabelwebpublicip501" {
    count = var.vm_count
    name = "${var.vm_name_pfx}-${count.index}-web"
    resource_group_name = azurerm_resource_group.azlabelrg401.name                          
    location = azurerm_resource_group.azlabelrg401.location
    allocation_method = "Static"
   
}
resource "azurerm_network_interface" "azlabelwebnic501" {
    count = var.vm_count
    name = "${var.vm_name_pfx}-${count.index}-nic"
    resource_group_name = azurerm_resource_group.azlabelrg401.name
    location = azurerm_resource_group.azlabelrg401.location
    ip_configuration {
      name = "webnicconfig"
      subnet_id = azurerm_subnet.azlabelwebsubnet401.id
      private_ip_address_allocation = "Dynamic"
      public_ip_address_id = azurerm_public_ip.azlabelwebpublicip501[count.index].id
    }
}
resource "azurerm_linux_virtual_machine" "azlabelwebserver501" {
    count = var.vm_count
    name = "${var.vm_name_pfx}-${count.index}-web"
    resource_group_name = azurerm_resource_group.azlabelrg401.name
    location = azurerm_resource_group.azlabelrg401.location
    size = "Standard_F2"
    admin_username = "adminuser"
    admin_password = "password3898!"
    disable_password_authentication = false
    network_interface_ids = [ azurerm_network_interface.azlabelwebnic501[count.index].id, ]

    os_disk {
      caching = "ReadWrite"
      storage_account_type = "Standard_LRS"

    }

    source_image_reference {
      publisher = "Canonical"
      offer = "UbuntuServer"
      sku = "18.04-LTS"
      version = "latest"
    }
  
}
resource "null_resource" "azurerm_null_dev" {
  count = var.vm_count

  triggers = {
    id = azurerm_linux_virtual_machine.azlabelwebserver501[count.index].id
  }
  provisioner "remote-exec" {
    inline = [
      "sudo apt update",
      "sudo apt install nginx -y"
    ]
    connection {
      type = "ssh"
      user = "adminuser"
      password = "password3898!"
      host = azurerm_linux_virtual_machine.azlabelwebserver501[count.index].public_ip_address 
      timeout = "2m"
    }
    
  }
   
}
resource "azurerm_network_security_group" "azweblabelnsg501" {
  name = "webnsg501"
  resource_group_name = azurerm_resource_group.azlabelrg401.name
  location = azurerm_resource_group.azlabelrg401.location
}
resource "azurerm_network_security_rule" "azweblabelnsr501" {
    name = "webnsr501"
resource_group_name =azurerm_resource_group.azlabelrg401.name 
    priority                   = "100"
    direction                  = "Inbound"
    access                     = "Allow"
    protocol                   = "Tcp"
    source_port_range          = "*"
    destination_port_range     = "*"
    source_address_prefix      = "*"
    destination_address_prefix = "*"
    network_security_group_name = azurerm_network_security_group.azapplabelnsg501.name
}

#Appserver
resource "azurerm_subnet" "azlabelappsubnet401" {
    name = "appsubnet"
    resource_group_name = azurerm_resource_group.azlabelrg401.name
    virtual_network_name = azurerm_virtual_network.azlabelvnet401.name
    address_prefixes = [ "10.60.2.0/24" ]
  
}
resource "azurerm_public_ip" "azlabelapppublicip501" {
    count = var.vm_count
    name = "${var.vm_name_pfx}-${count.index}-app"
    resource_group_name = azurerm_resource_group.azlabelrg401.name                          
    location = azurerm_resource_group.azlabelrg401.location
    allocation_method = "Static"
   
}
resource "azurerm_network_interface" "azlabelappnic501" {
    count = var.vm_count
    name = "${var.vm_name_pfx}-${count.index}-nic1"
    resource_group_name = azurerm_resource_group.azlabelrg401.name
    location = azurerm_resource_group.azlabelrg401.location
    ip_configuration {
      name = "appnicconfig"
      subnet_id = azurerm_subnet.azlabelappsubnet401.id
      private_ip_address_allocation = "Dynamic"
      public_ip_address_id = azurerm_public_ip.azlabelapppublicip501[count.index].id
    }
}
resource "azurerm_linux_virtual_machine" "azlabelappserver501" {
    count = var.vm_count
    name = "${var.vm_name_pfx}-${count.index}-app"
    resource_group_name = azurerm_resource_group.azlabelrg401.name
    location = azurerm_resource_group.azlabelrg401.location
    size = "Standard_F2"
    admin_username = "adminuser"
    admin_password = "password3898!"
    disable_password_authentication = false
    network_interface_ids = [ azurerm_network_interface.azlabelappnic501[count.index].id, ]

    os_disk {
      caching = "ReadWrite"
      storage_account_type = "Standard_LRS"

    }

    source_image_reference {
      publisher = "Canonical"
      offer = "UbuntuServer"
      sku = "18.04-LTS"
      version = "latest"
    }
  
}
resource "null_resource" "azurerm_null_dev1" {
  count = var.vm_count

  triggers = {
    id = azurerm_linux_virtual_machine.azlabelappserver501[count.index].id
  }
  provisioner "remote-exec" {
    inline = [
      "sudo apt update",
      "sudo apt install default-jdk -y"
    ]
    connection {
      type = "ssh"
      user = "adminuser"
      password = "password3898!"
      host = azurerm_linux_virtual_machine.azlabelappserver501[count.index].public_ip_address 
      timeout = "2m"
    }
    
  }
   
}
resource "azurerm_network_security_group" "azapplabelnsg501" {
  name = "appnsg501"
  resource_group_name = azurerm_resource_group.azlabelrg401.name
  location = azurerm_resource_group.azlabelrg401.location
}
resource "azurerm_network_security_rule" "azapplabelnsr501" {
  name = "appnsr501"
resource_group_name = azurerm_resource_group.azlabelrg401.name
    priority                   = "110"
    direction                  = "Inbound"
    access                     = "Allow"
    protocol                   = "Tcp"
    source_port_range          = "*"
    destination_port_range     = "*"
    source_address_prefix      = "*"
    destination_address_prefix = "*"
    network_security_group_name = azurerm_network_security_group.azapplabelnsg501.name
}

#DBserver
resource "azurerm_subnet" "azlabeldbsubnet401" {
    name = "dbsubnet"
    resource_group_name = azurerm_resource_group.azlabelrg401.name
    virtual_network_name = azurerm_virtual_network.azlabelvnet401.name
    address_prefixes = [ "10.60.3.0/24" ]
  
}
resource "azurerm_public_ip" "azlabeldbpublicip501" {
    count = var.vm_count
    name = "${var.vm_name_pfx}-${count.index}-db"
    resource_group_name = azurerm_resource_group.azlabelrg401.name                          
    location = azurerm_resource_group.azlabelrg401.location
    allocation_method = "Static"
   
}
resource "azurerm_network_interface" "azlabeldbnic501" {
    count = var.vm_count
    name = "${var.vm_name_pfx}-${count.index}-nic2"
    resource_group_name = azurerm_resource_group.azlabelrg401.name
    location = azurerm_resource_group.azlabelrg401.location
    ip_configuration {
      name = "dbnicconfig"
      subnet_id = azurerm_subnet.azlabeldbsubnet401.id
      private_ip_address_allocation = "Dynamic"
      public_ip_address_id = azurerm_public_ip.azlabeldbpublicip501[count.index].id
    }
}
resource "azurerm_linux_virtual_machine" "azlabeldbserver501" {
    count = var.vm_count
    name = "${var.vm_name_pfx}-${count.index}-db"
    resource_group_name = azurerm_resource_group.azlabelrg401.name
    location = azurerm_resource_group.azlabelrg401.location
    size = "Standard_F2"
    admin_username = "adminuser"
    admin_password = "password3898!"
    disable_password_authentication = false
    network_interface_ids = [ azurerm_network_interface.azlabeldbnic501[count.index].id, ]

    os_disk {
      caching = "ReadWrite"
      storage_account_type = "Standard_LRS"

    }

    source_image_reference {
      publisher = "Canonical"
      offer = "UbuntuServer"
      sku = "18.04-LTS"
      version = "latest"
    }
  
}
resource "null_resource" "azurerm_null_dev3" {
  count = var.vm_count

  triggers = {
    id = azurerm_linux_virtual_machine.azlabeldbserver501[count.index].id
  }
  provisioner "remote-exec" {
    inline = [
      "sudo apt-get update",
      "sudo apt-get install -y mysql-server"
    ]
    connection {
      type = "ssh"
      user = "adminuser"
      password = "password3898!"
      host = azurerm_linux_virtual_machine.azlabeldbserver501[count.index].public_ip_address 
      timeout = "2m"
    }
    
  }
   
}
resource "azurerm_network_security_group" "azdblabelnsg501" {
  name = "dbnsg501"
  resource_group_name = azurerm_resource_group.azlabelrg401.name
  location = azurerm_resource_group.azlabelrg401.location
}
resource "azurerm_network_security_rule" "azdblabelnsr501" {
  name = "dbnsr501"
resource_group_name = azurerm_resource_group.azlabelrg401.name
    priority                   = "130"
    direction                  = "Inbound"
    access                     = "Allow"
    protocol                   = "Tcp"
    source_port_range          = "*"
    destination_port_range     = "398"
    source_address_prefix      = "167.220.255.0/25"
    destination_address_prefix = "*"
    network_security_group_name = azurerm_network_security_group.azdblabelnsg501.name
}

#variables.tf

variable "subscription_id" {
    type = string
    default = "******"
    description = "prod subscription"
  
}
variable "client_id" {
    type = string
    default = "******"
    description = "prod client_id"
  
}
variable "client_secret" {
    type = string
    default = "******"
    description = "prod client_secret"
  
}
variable "tenant_id" {
    type = string
    default = "****"
    description = "prod tenant_id"

  
}
variable "vm_name_pfx" {
    type = string
    default = "dev-vm-"
    description = "vm name prefix"
  
}
variable "vm_count" {
    type = string
    default = "1"
    description = "vm count"
  
}


